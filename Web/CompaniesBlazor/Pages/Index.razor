@page "/"
@using CompaniesRpc
@using Grpc.Core
@inject Greeter.GreeterClient GreeterClient

<PageTitle>Index</PageTitle>

<input class="form-control" @bind="_searchText" @onkeydown="async (e) => await OnInput(e)" 
	placeholder="Enter search text here"/>

@if (_searchInProgress)
{
	<br class="pt-4"/>

	<div class="d-flex align-items-center">
		<strong>Loading...</strong>
		<div class="spinner-border ms-auto" role="status" aria-hidden="true"></div>
	</div>
}

<br class="pb-4"/>

@if(_customers is not null)
{
	<table class="table">
		<thead>
			<tr>
				<td>First Name</td>
				<td>Last Name</td>
				<td>Email Address</td>
			</tr>
		</thead>
		<tbody>
			@foreach (var customer in _customers)
		    {
			    <tr>
					<td>@customer.FirstName</td>
					<td>@customer.LastName</td>
					<td>@customer.EmailAddress</td>
				</tr>
		    }
		</tbody>
	</table>
}

@code {
	private string _searchText = string.Empty;
	private bool _searchInProgress = false;

	private IList<CustomerRpc> _customers = new List<CustomerRpc>();

	protected override async Task OnInitializedAsync()
	{
		try
		{
			_searchInProgress = true;

			var request = new CustomerRequest();
			request.SearchText = string.Empty;

			var response = await GreeterClient.GetCustomersAsync(request, new CallOptions());
			_customers.Clear();
			_customers = response.Customers;
		}
		finally
		{
			_searchInProgress = false;
		}

		await base.OnInitializedAsync();
	}

	private async Task OnInput(KeyboardEventArgs e)
	{
		if (e.Code == "Enter" || e.Code == "NumpadEnter" && !_searchInProgress)
		{
			try
			{
				_searchInProgress = true;

				var request = new CustomerRequest();
				request.SearchText = _searchText ?? string.Empty;

				var response = await GreeterClient.GetCustomersAsync(request, new CallOptions());
				_customers.Clear();
				_customers = response.Customers;
			}
			finally
			{
				_searchInProgress = false;	
			}
		}
	}
}